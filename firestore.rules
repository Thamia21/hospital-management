rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        ('role' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'ADMIN';
    }

    function isDoctor() {
      return isAuthenticated() && 
        ('role' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.lower() == 'doctor';
    }

    function isNurse() {
      return isAuthenticated() && 
        ('role' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.lower() == 'nurse';
    }

    function isPatient() {
      return isAuthenticated() && 
        ('role' in get(/databases/$(database)/documents/users/$(request.auth.uid)).data) && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role.lower() == 'patient';
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Users collection
    match /users/{userId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isOwner(userId) ||
        // Allow reading doctor/nurse data for appointments and chat
        (
          (resource.data.role.lower() in ['doctor', 'nurse', 'patient']) && 
          (isPatient() || isDoctor() || isNurse() || isAdmin())
        )
      );
      allow write: if isAdmin() || isOwner(userId);
    }

    // Patients collection
    match /patients/{patientId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isDoctor() ||
        isNurse() ||
        isOwner(patientId)
      );
      allow write: if isAdmin() || isDoctor() || isNurse();
    }

    // Appointments collection
    match /appointments/{appointmentId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isDoctor() || 
        isNurse() || 
        (isPatient() && resource.data.patientId == request.auth.uid)
      );
      allow write: if isAdmin() || isDoctor() || isNurse() ||
                   (isPatient() && request.resource.data.patientId == request.auth.uid);
    }

    // Medical records collection
    match /medicalRecords/{recordId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isDoctor() || 
        isNurse() || 
        (isPatient() && resource.data.patientId == request.auth.uid)
      );
      allow write: if isAdmin() || isDoctor() || isNurse();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (
        isAdmin() ||
        request.auth.uid in resource.data.recipients
      );
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin();
    }

    // Test Results collection
    match /testResults/{resultId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isDoctor() || 
        isNurse() || 
        (isPatient() && resource.data.patientId == request.auth.uid)
      );
      allow write: if isAdmin() || isDoctor() || isNurse();
    }

    // Prescriptions collection
    match /prescriptions/{prescriptionId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        isDoctor() || 
        isNurse() || 
        (isPatient() && resource.data.patientId == request.auth.uid)
      );
      allow write: if isAdmin() || isDoctor();
    }

    // Doctors collection
    match /doctors/{doctorId} {
      allow read: if isAuthenticated();
      allow write: if isAdmin();
    }

    // Chat Messages collection
    match /chats/{chatId} {
      allow read, write: if isAuthenticated();
      allow read: if isAuthenticated() && (
        isAdmin() ||
        resource.data.patientId == request.auth.uid ||
        resource.data.doctorId == request.auth.uid
      );
      allow create: if isAuthenticated() && (
        (isPatient() && request.resource.data.patientId == request.auth.uid) ||
        (isDoctor() && request.resource.data.doctorId == request.auth.uid)
      );
      allow update, delete: if false; // Messages can't be edited or deleted
    }

    // Chat Rooms collection
    match /chatRooms/{roomId} {
      allow create: if isAuthenticated();
      allow read, update: if isAuthenticated() && request.auth.uid in resource.data.participants;
      allow read: if isAuthenticated() && (
        isAdmin() ||
        resource.data.participants[request.auth.uid] == true
      );
      allow create: if isAuthenticated() && (
        (isPatient() || isDoctor()) &&
        request.resource.data.participants[request.auth.uid] == true
      );
      allow update: if isAuthenticated() && (
        resource.data.participants[request.auth.uid] == true ||
        request.resource.data.participants[request.auth.uid] == true
      );
      allow delete: if false;
    }

    // Bills collection
    match /bills/{billId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        (isPatient() && resource.data.patientId == request.auth.uid) ||
        (isDoctor() && resource.data.doctorId == request.auth.uid) ||
        isNurse()
      );
      allow write: if isAuthenticated() && (
        isAdmin() ||
        // Allow doctors to create/update bills for their patients
        (isDoctor() && request.resource.data.doctorId == request.auth.uid)
      );
      allow delete: if isAdmin();
    }

    // Notifications collection
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && (
        isAdmin() || 
        resource.data.userId == request.auth.uid
      );
      allow write: if isAdmin() || 
                   (isAuthenticated() && resource.data.userId == request.auth.uid);
    }

    // Default deny
    match /{document=**} {
      allow read, write: if false;
    }
  }
}